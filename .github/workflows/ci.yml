name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - 'feature/**'
      - develop
      - 'release/**'
      - main
    tags:
      - 'v*.*.*'

env:
  REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  IMAGE_NAMESPACE: ${{ secrets.REGISTRY_USERNAME }}

jobs:
  lint-commits:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint Conventional Commits
        uses: wagoid/commitlint-github-action@v4
        with:
          configFile: commitlint.config.js

  build-test-scan:
    needs: lint-commits
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [node-converter, php-converter]
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build image for ${{ matrix.service }}
        run: |
          IMAGE=${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAMESPACE }}/${{ matrix.service }}:${{ github.sha }}
          docker build \
            --file ./conversion-service/${{ matrix.service }}/Dockerfile \
            --tag $IMAGE \
            ./conversion-service/${{ matrix.service }}

      - name: Test image for ${{ matrix.service }}
        run: |
          IMAGE=${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAMESPACE }}/${{ matrix.service }}:${{ github.sha }}
          if [ "${{ matrix.service }}" = "node-converter" ]; then
            docker run --rm $IMAGE npm test
          else
            docker run --rm $IMAGE vendor/bin/phpunit --configuration phpunit.xml
          fi

      - name: Scan with Trivy for ${{ matrix.service }}
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAMESPACE }}/${{ matrix.service }}:${{ github.sha }}
          format: table
          exit-code: '0'
          vuln-type: os,library

      - name: Generate SBOM for ${{ matrix.service }}
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAMESPACE }}/${{ matrix.service }}:${{ github.sha }}
          output-format: spdx-json
          output-path: sbom-${{ matrix.service }}.json

  push-images:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-test-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push images
        run: |
          for svc in node-converter php-converter; do
            IMAGE=${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAMESPACE }}/${svc}:${{ github.sha }}
            docker push $IMAGE
            docker tag $IMAGE ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAMESPACE }}/${svc}:${{ github.ref_name }}
            docker push ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAMESPACE }}/${svc}:${{ github.ref_name }}
          done

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: push-images
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Deploy stack via Docker Compose
        run: |
          cd /ruta/al/proyecto
          docker-compose pull
          docker-compose up -d